<!DOCTYPE html>
<html lang="en">

{{>head fontless=true main=true}}

<body class="main">

	<!-- layout -->
	<div class="root">		
		
		<!-- header -->
		{{>header brand="pion-clinician" active="" logged=true}}

		<!-- mainboard -->
		<main class="main">
			
			<!-- booking -->
			<section class="section board">

				<div class="board-row">
	
					<div class="booking-block">

						<h1 class="title -big">Booking Schedule <div class="title-step">Step 3 of 3</div></h1>
						<div class="booking-body">

							<div class="form-main form-booking">
								<form action="booking-step4.html">
									<div class="booking-row" data-form-toggle="true">
										<div class="form-text">Select your Expert by:</div>
										{{>radio label="Availability" id="expert_availability" name="expert_book_type" toggle="expert-sorting" sorting="date"}}
										{{>radio label="Specialist" id="expert_specialist" name="expert_book_type" toggle="expert-sorting" sorting="expert"}}
									</div>
									<div class="booking-row booking-sorting -hide" id="expert-sorting">
										<div class="booking-row" data-sort-name="date">
											<div class="form-text">Attending date schedule</div>
											{{>input type="text" name="attending_date" placeholder="Select date" nolabel="true" function="js-datepicker-booking" parent="js-datepicker-container" readonly="true"}}
										</div>
										<div class="booking-row" data-sort-name="time">
											<div class="form-text">Time to attend</div>
											<div class="booking-time">
												{{>radio label="10.00" id="time_1000" name="book_time" disabled="true"}}
												{{>radio label="10.30" id="time_1030" name="book_time"}}
												{{>radio label="11.00" id="time_1100" name="book_time"}}
												{{>radio label="11.30" id="time_1130" name="book_time"}}
												{{>radio label="12.00" id="time_1200" name="book_time" disabled="true"}}
												{{>radio label="12.30" id="time_1230" name="book_time" disabled="true"}}
												{{>radio label="13.00" id="time_1300" name="book_time"}}
												{{>radio label="13.30" id="time_1330" name="book_time"}}
												{{>radio label="14.00" id="time_1400" name="book_time"}}
												{{>radio label="14.30" id="time_1430" name="book_time"}}
												{{>radio label="15.00" id="time_1500" name="book_time" disabled="true"}}
												{{>radio label="15.30" id="time_1530" name="book_time"}}
												{{>radio label="16.00" id="time_1600" name="book_time"}}
												{{>radio label="16.30" id="time_1630" name="book_time"}}
												{{>radio label="17.00" id="time_1700" name="book_time"}}
												{{>radio label="17.30" id="time_1730" name="book_time"}}
												{{>radio label="18.00" id="time_1800" name="book_time"}}
											</div>
										</div>
										<div class="booking-row" data-sort-name="expert">
											<div class="form-text">Your expert</div>
											<!-- textbox for display result only || searching box-->
											<input type="text" id="attending_expert_display" name="attending_expert_display" class="js-autocomplete-expert" placeholder="Search your expert" autocomplete="off" data-expert-display="true">
											<!-- textbox for form submiting -->
											<input type="hidden" name="attending_expert_id" id="attending_expert_id" data-expert-id="true">
											{{!>select type="select" name="psychiatrist" placeholder="Select  your psychiatrist" nolabel="true" option="Dian Oriza M.Psi.,Katarina Ira Puspita M.Psi.,Astrid WEN M.Psi.,Dr. Rahma Paramita M.Psi."}}
											<div id="expertList" class="about-expert -list">
												{{#each expert}}
												<div class="about-expert-item">
													<div class="about-expert-img">
														<img src="./asset/images/expert/{{img}}" alt="{{name}}">
													</div>
													<div class="about-expert-col">
														<div class="about-expert-name">{{name}}</div>
														<div class="about-expert-skill">{{skill}}</div>
														<button type="button" onclick="selectExpert(this, '{{id}}', '{{name}}')" class="button" data-expert-id="{{@index}}" data-expert-select="false" data-text="Select"><i class="fa-solid fa-plus"></i></button>
													</div>
												</div>
												{{/each}}
												<div class="more-loading" id="about-more-trigger" data-more-url="./asset/dummy-expert.json" style="display: none">
													<div class="more-loading-circle"></div>
												</div>
											</div>
											<div class="about-expert-gradient"></div>
										</div>
									</div>
									<div class="booking-row booking-action">
										{{>button type="button" label="Back" class="-auto" onclick="window.history.go(-1); return false;"}}
										{{>button type="submit" label="Next" class="-primary -auto"}}
									</div>
								</form>
							</div>

						</div>

					</div>

				</div>

			</section>

		</main>

		<!-- footer -->
		{{>footer brand="pion-clinician"}}

	</div>

{{>js}}
<script src="https://cdn.jsdelivr.net/npm/@tarekraafat/autocomplete.js@10.2.7/dist/autoComplete.min.js"></script>
<script>
		
		// plugin docs: https://tarekraafat.github.io/autoComplete.js/

		// autocomplete
		const autoCompleteJS = new autoComplete({
			selector: ".js-autocomplete-expert",
			threshold: 2,
			wrapper: false,
			placeHolder: "Search your expert",
			data: {
				src: async (query) => {
					try {
						// Fetch Data from external Source
						const source = await fetch(`./asset/dummy-expert.json`);
						// Data should be an array of `Objects` or `Strings`
						const data = await source.json();
						//data = JSON.parse(data)
						return data.expert;
					} catch (error) {
						console.log(error)
						return error;
					}
				},
				cache: true,
				keys: ["name"]
			},
			resultsList: {
				destination: "#expertList",
				position: "beforebegin",
				class: "about-expert -list",
				element: (list, data) => {
					if (!data.results.length) {
						// Create "No Results" message element
						const message = document.createElement("div");
						// Add class to the created element
						message.setAttribute("class", "no_result");
						// Add message text content
						message.innerHTML = `<span>Expert yang dimaksud tidak ditemukan</span>`;
						// Append message element to the results list
						list.prepend(message);
					}
				},
		    maxResults: 5,
				noResults: true,
				tabSelect: true
			},
			resultItem: {
				class: "about-expert-item",
				element: (item, data) => {
				// Modify Results Item Content
				//console.log(data)
				let selected = 'false'
				if(document.querySelector('[data-expert-id]').value==data.value.id) {
					selected = 'true'
				}
				item.innerHTML = `
					<div class="about-expert-img">
						<img src="./asset/images/expert/${data.value.img}" alt="${data.value.name}">
					</div>
					<div class="about-expert-col">
						<div class="about-expert-name">${data.match}</div>
						<div class="about-expert-skill">${data.value.skill}</div>
						<button type="button" onclick="selectExpert(this, '${data.value.id}', '${data.value.name}', 'search')" class="button -auto" data-expert-id="" data-expert-select="${selected}" data-text="Select"><i class="fa-solid fa-plus"></i></button>
					</div>
				`;
				},
				highlight: true,
			},
			events: {
				input: {
					selection: (event) => {
						//const selection = event.detail.selection.value;
						//autoCompleteJS.input.value = selection.name;
						//expert_value.value = selection.id;
						//console.log(event)
					}
				}
			}
	});


// load more expert
let isLoading = false
const elWrap = document.getElementById('expertList')
const elLoadMore = document.getElementById('about-more-trigger')

if (!!elWrap && !!elLoadMore) {
		elWrap.addEventListener('scroll', async function(e) {
				const { 
						scrollHeight,
						scrollTop,
						clientHeight
				} = elWrap;

				if (Math.ceil(scrollTop + clientHeight) == scrollHeight) {   
						if (isLoading) { return; }       
						
						isLoading = true
						elLoadMore.style.display = 'flex'
						let loadMore = await fetch(elLoadMore.dataset.moreUrl)
						let response = await loadMore.json()
						if (response.status) {
								console.log(response.expert)
								isLoading = false
								elLoadMore.style.display = 'none'
								//elLoadMore.dataset.moreUrl = response.urlNext // page 2
								let moreLayout = ``
								let resExp = response.expert
								if(resExp) {
									resExp.forEach(function(item){
										moreLayout += `
										<div class="about-expert-item">
											<div class="about-expert-img">
												<img src="./asset/images/expert/${item.img}" alt="${item.name}">
											</div>
											<div class="about-expert-col">
												<div class="about-expert-name">${item.name}</div>
												<div class="about-expert-skill">${item.skill}</div>
												<button type="button" onclick="selectExpert(this, '${item.id}', '${item.name}', 'search')" class="button -auto" data-expert-id="" data-expert-select="false" data-text="Select"><i class="fa-solid fa-plus"></i></button>
											</div>
										</div>
										`
									})
								}
								elLoadMore.insertAdjacentHTML('beforebegin', moreLayout)                    
						} else {
								setTimeout(function() {
										elLoadMore.style.display = 'none'
								}, 3000)
						}
				}
		})
}

</script>
</body>
</html>
